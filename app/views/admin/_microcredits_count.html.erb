<div style="margin:auto;width:<%=width%>"><canvas class="js-graph js-line" data-scope="microcredits-count" width="100" height="40"></canvas></div>
<%
parent = params[:id] ? Microcredit.find(params[:id]) : nil
base = parent ? MicrocreditLoan.where(microcredit: parent).joins(:microcredit) : MicrocreditLoan.joins(:microcredit).merge(Microcredit.upcoming_finished)
base = base.unscope(:order)

created = base.group(MicrocreditLoan.unique_day("microcredit_loans.created_at")).count
confirmed = base.where.not(confirmed_at:nil).group(MicrocreditLoan.unique_day(:confirmed_at)).count
confirmed_created = base.where.not(confirmed_at:nil).group(MicrocreditLoan.unique_day("microcredit_loans.created_at")).count
counted = base.where.not(counted_at:nil).group(MicrocreditLoan.unique_day(:counted_at)).count

days = [ created, confirmed, confirmed_created, counted ].flat_map(&:keys).uniq.sort.map {|i| [i, "#{i.to_i%384%32}/#{i.to_i%384/32+1}/#{i.to_i/384}"] }
%>    

<table class="js-microcredits-count data_table">
  <tr>
    <th>Día</th>
    <th class="js-serie">Suscritos</th>
    <th class="js-serie">Visibles</th>
    <th class="js-serie">Confirmados<br/>(por fecha de confirmación)</th>
    <th class="js-serie">Confirmados<br/>(por fecha de suscripción)</th>
  </tr>
<% created_acum = counted_acum = confirmed_acum = confirmed_created_acum = 0 %>
<% days.each do | key, text | 
    created_acum += (created[key] || 0)
    counted_acum += (counted[key] || 0)
    confirmed_acum += (confirmed[key] || 0)
    confirmed_created_acum += (confirmed_created[key] || 0)
  %>
  <tr class="js-row">
  <td class="js-label"><%=text%></td>
  <td class="js-cell"><%=created_acum%></td>
  <td class="js-cell"><%=counted_acum%></td>
  <td class="js-cell"><%=confirmed_acum%></td>
  <td class="js-cell"><%=confirmed_created_acum%></td>
  </tr>
<% end %>
</table>